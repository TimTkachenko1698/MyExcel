NDSearch.OnPrefixDataLoaded("eva",["Function"],[["Evaluate",,[["MyExel.Spreadsheet.Cell",,,,0,"File:Spreadsheet/Cell.cs:MyExel.Spreadsheet.Cell.Evaluate","CSharpClass:MyExel.Spreadsheet.Cell:Evaluate"],["Operations.Add",,,,0,"File:Parser/Operations.cs:Operations.Add.Evaluate","CSharpClass:Operations.Add:Evaluate"],["Operations.And",,,,0,"File:Parser/Operations.cs:Operations.And.Evaluate","CSharpClass:Operations.And:Evaluate"],["Operations.Decrement",,,,0,"File:Parser/Operations.cs:Operations.Decrement.Evaluate","CSharpClass:Operations.Decrement:Evaluate"],["Operations.Divide",,,,0,"File:Parser/Operations.cs:Operations.Divide.Evaluate","CSharpClass:Operations.Divide:Evaluate"],["Operations.Equal",,,,0,"File:Parser/Operations.cs:Operations.Equal.Evaluate","CSharpClass:Operations.Equal:Evaluate"],["Operations.Exponentiate",,,,0,"File:Parser/Operations.cs:Operations.Exponentiate.Evaluate","CSharpClass:Operations.Exponentiate:Evaluate"],["Operations.GraterEqualThan",,,,0,"File:Parser/Operations.cs:Operations.GraterEqualThan.Evaluate","CSharpClass:Operations.GraterEqualThan:Evaluate"],["Operations.GraterThan",,,,0,"File:Parser/Operations.cs:Operations.GraterThan.Evaluate","CSharpClass:Operations.GraterThan:Evaluate"],["Operations.IBinaryLogicOperation",,,,0,"File:Parser/Operations.cs:Operations.IBinaryLogicOperation.Evaluate","CSharpClass:Operations.IBinaryLogicOperation:Evaluate"],["Operations.IBinaryOperation",,,,0,"File:Parser/Operations.cs:Operations.IBinaryOperation.Evaluate","CSharpClass:Operations.IBinaryOperation:Evaluate"],["Operations.IMultyOperation",,,,0,"File:Parser/Operations.cs:Operations.IMultyOperation.Evaluate","CSharpClass:Operations.IMultyOperation:Evaluate"],["Operations.Increment",,,,0,"File:Parser/Operations.cs:Operations.Increment.Evaluate","CSharpClass:Operations.Increment:Evaluate"],["Operations.IUnaryOperation",,,,0,"File:Parser/Operations.cs:Operations.IUnaryOperation.Evaluate","CSharpClass:Operations.IUnaryOperation:Evaluate"],["Operations.Mod",,,,0,"File:Parser/Operations.cs:Operations.Mod.Evaluate","CSharpClass:Operations.Mod:Evaluate"],["Operations.Multiply",,,,0,"File:Parser/Operations.cs:Operations.Multiply.Evaluate","CSharpClass:Operations.Multiply:Evaluate"],["Operations.Not",,,,0,"File:Parser/Operations.cs:Operations.Not.Evaluate","CSharpClass:Operations.Not:Evaluate"],["Operations.NotEqual",,,,0,"File:Parser/Operations.cs:Operations.NotEqual.Evaluate","CSharpClass:Operations.NotEqual:Evaluate"],["Operations.Or",,,,0,"File:Parser/Operations.cs:Operations.Or.Evaluate","CSharpClass:Operations.Or:Evaluate"],["Operations.SmallerEqualThan",,,,0,"File:Parser/Operations.cs:Operations.SmallerEqualThan.Evaluate","CSharpClass:Operations.SmallerEqualThan:Evaluate"],["Operations.SmallerThan",,,,0,"File:Parser/Operations.cs:Operations.SmallerThan.Evaluate","CSharpClass:Operations.SmallerThan:Evaluate"],["Operations.Substruct",,,,0,"File:Parser/Operations.cs:Operations.Substruct.Evaluate","CSharpClass:Operations.Substruct:Evaluate"]]]]);